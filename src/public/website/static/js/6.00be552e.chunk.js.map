{"version":3,"sources":["pages/blog/Post.module.css","pages/blog/Comment.module.css","pages/blog/CommentSection.module.css","pages/blog/PostLinks.module.css","pages/blog/PostLinksDrawer.module.css","pages/blog/Comment.tsx","pages/blog/CommentSection.tsx","pages/blog/PostLinks.tsx","pages/blog/PostLinksDrawer.tsx","pages/blog/DisplayHTML.tsx","pages/blog/Post.tsx","shared/components/FormElements/Button.tsx","shared/components/UIElements/Modal.tsx","shared/components/FormElements/Button.module.css","shared/components/UIElements/Modal.module.css","shared/components/UIElements/Card.tsx","shared/components/UIElements/Card.module.css","shared/hooks/http-hook.tsx","shared/components/UIElements/ErrorModal.tsx","shared/components/UIElements/ErrorModal.module.css"],"names":["module","exports","Comment","props","authCtx","useContext","AuthContext","useState","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","Fragment","Modal","show","onCancel","header","footer","Button","type","onClick","danger","onDelete","commentId","backdropClass","classes","className","comment","userName","date","children","isLoggedIn","userId","CommentSection","useForm","mode","register","reset","isValid","formState","handleSubmit","placeholder","comments","length","Card","map","username","creatorId","_id","onDeleteComment","onSubmit","data","onAddComment","newComment","required","disabled","to","PostLinks","posts","reverse","activeClassName","exact","post","title","replace","PostLinksDrawer","nodeRef","useRef","content","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","ref","onMouseLeave","onHoverAway","linksHook","document","getElementById","ReactDOM","createPortal","DisplayHTML","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","text","REST_API","process","Post","postTitle","useParams","postId","loadedPost","setLoadedPost","loadedComments","setLoadedComments","loadedPostLinks","setLoadedPostLinks","showLinks","setShowLinks","history","useHistory","postCtx","PostContext","useHttpClient","isLoading","error","sendRequest","clearError","clearContext","useEffect","getPost","a","replaceAll","responseData","io","on","action","addComment","deleteComment","prevComments","filter","addCommentHandler","useCallback","commentData","JSON","stringify","Date","toLocaleDateString","Authorization","token","deleteCommentHandler","deletePostHandler","push","showLinksHandler","hideLinksHandler","Backdrop","ErrorModal","onClear","LoadingSpinner","asOverlay","onMouseEnter","id","dates","dateTime","month","day","year","toString","updatedMonth","updatedDay","updatedYear","tags","split","tag","index","toLowerCase","src","headImg","alt","headImgAlt","caption","headImgCaption","ct","language","Math","random","references","authors","href","url","target","rel","setContext","blurb","button","size","inverse","ModalOverlay","style","headerClass","onSumbit","event","preventDefault","contentClass","footerClass","React","card","setIsLoading","setError","activeHttpRequests","method","body","headers","undefined","httpAbortCtrl","AbortController","current","fetch","signal","response","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"mappings":"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","file":"static/js/6.00be552e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-not-found-wrapper\":\"Post_post-not-found-wrapper__12ynM\",\"post-not-found\":\"Post_post-not-found__1_L7y\",\"post-wrapper\":\"Post_post-wrapper__2O4LG\",\"open-links\":\"Post_open-links__3KT9A\",\"chevron\":\"Post_chevron__3JD-s\",\"post\":\"Post_post__27pu7\",\"headImg\":\"Post_headImg__27d4a\",\"tags\":\"Post_tags__2AHwL\",\"tag\":\"Post_tag__V_rcN\",\"header-text\":\"Post_header-text__2onfJ\",\"dates\":\"Post_dates__2naAr\",\"created-date\":\"Post_created-date__3f3l2\",\"updated-date\":\"Post_updated-date__MTHBt\",\"caption\":\"Post_caption__Y5E-T\",\"content-paragraph\":\"Post_content-paragraph__qLwpF\",\"content-header\":\"Post_content-header__2fjeR\",\"references\":\"Post_references__2tHFL\",\"admin-buttons\":\"Post_admin-buttons__3lRAY\",\"modal-backdrop\":\"Post_modal-backdrop__WeaUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment-wrapper\":\"Comment_comment-wrapper__3H6sZ\",\"comment\":\"Comment_comment__1gtt_\",\"comment-single\":\"Comment_comment-single__2MsVC\",\"comment-header\":\"Comment_comment-header__1DkGU\",\"date\":\"Comment_date__2r5MH\",\"delete-btn\":\"Comment_delete-btn__1zkgL\",\"modal-backdrop\":\"Comment_modal-backdrop__2Bdqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment-section\":\"CommentSection_comment-section__3zdnw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-links\":\"PostLinks_post-links__1AtrD\",\"active-link\":\"PostLinks_active-link__Wpm0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"links-drawer\":\"PostLinksDrawer_links-drawer__2C90B\"};","import React, { useContext, useState } from \"react\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport classes from \"./Comment.module.css\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\ninterface Props {\r\n  userId: string;\r\n  commentId: string;\r\n  userName: string;\r\n  date: string;\r\n  onDelete: (commentId: string) => Promise<void>;\r\n}\r\n\r\nconst Comment: React.FC<Props> = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const deleteComment = () => {\r\n    props.onDelete(props.commentId);\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button type=\"button\" onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button type=\"button\" danger onClick={deleteComment}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n        backdropClass={classes[\"modal-backdrop\"]}\r\n      >\r\n        <p>Do you want to delete this comment? This cannot be undone.</p>\r\n      </Modal>\r\n      <div className={classes[\"comment-wrapper\"]}>\r\n        <div className={classes.comment}>\r\n          <div className={classes[\"comment-single\"]}>\r\n            <div className={classes['comment-header']}>\r\n              <h3>{props.userName}</h3>\r\n              <h3 className={classes.date}>{props.date}</h3>\r\n            </div>\r\n            <p>{props.children}</p>\r\n          </div>\r\n        </div>\r\n        {authCtx.isLoggedIn && props.userId === authCtx.userId && (\r\n          <div className={classes[\"delete-btn\"]}>\r\n            <button type=\"button\" onClick={showModal}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nimport Comment from \"./Comment\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport classes from \"./CommentSection.module.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\ninterface CommentInterface {\r\n  comment: string;\r\n  creatorId: string;\r\n  postId: string;\r\n  username: string;\r\n  __V: number;\r\n  _id: string;\r\n  date: string;\r\n}\r\n\r\ninterface Props {\r\n  postId: string;\r\n  comments: CommentInterface[];\r\n  onDeleteComment: (commentId: string) => Promise<void>;\r\n  onAddComment: (commentData: { newComment: string }) => Promise<void>;\r\n}\r\n\r\ninterface CommentInput {\r\n  newComment: string;\r\n}\r\n\r\nconst CommentSection: React.FC<Props> = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const {\r\n    register,\r\n    reset,\r\n    formState: { isValid },\r\n    handleSubmit,\r\n  } = useForm({ mode: \"onChange\" });\r\n\r\n  const onSubmit: SubmitHandler<CommentInput> = (data) => {\r\n    props.onAddComment(data);\r\n    reset({ newComment: null });\r\n  };\r\n\r\n  let placeholder = !authCtx.isLoggedIn\r\n    ? \"Login to add a comment.\"\r\n    : authCtx.isLoggedIn && props.comments.length === 0\r\n    ? \"Be the first to add a comment...\"\r\n    : \"Add a comment...\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes[\"comment-section\"]}>\r\n        <header>\r\n          <h3>Comments</h3>\r\n        </header>\r\n        <div>\r\n          <ul>\r\n            {props.comments.map((comment) => {\r\n              return (\r\n                <li key={comment._id}>\r\n                  <Comment\r\n                    userName={comment.username}\r\n                    userId={comment.creatorId}\r\n                    commentId={comment._id}\r\n                    onDelete={props.onDeleteComment}\r\n                    date={comment.date}\r\n                  >\r\n                    {comment.comment}\r\n                  </Comment>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {props.comments.length > 0 && <hr />}\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <input\r\n            {...register(\"newComment\", { required: true })}\r\n            placeholder={placeholder}\r\n          />\r\n          {authCtx.isLoggedIn ? (\r\n            <Button type=\"submit\" disabled={!isValid}>\r\n              submit\r\n            </Button>\r\n          ) : (\r\n            <Link to=\"/auth\">LOGIN</Link>\r\n          )}\r\n        </form>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./PostLinks.module.css\";\r\n\r\ninterface Props {\r\n  posts: {\r\n    title: string;\r\n    _id: string;\r\n  }[];\r\n}\r\nconst PostLinks: React.FC<Props> = (props) => {\r\n  const posts = props.posts.reverse();\r\n  return (\r\n    <nav className={classes[\"post-links\"]}>\r\n      <ul>\r\n        <li>\r\n          <NavLink to={\"/blog\"} activeClassName={classes[\"active-link\"]} exact>\r\n            Blog Home\r\n          </NavLink>\r\n        </li>\r\n        {posts.map((post) => {\r\n          return (\r\n            <li key={post._id}>\r\n              <NavLink\r\n                to={`${post.title.replace(/\\s/g, '-')}`}\r\n                activeClassName={classes[\"active-link\"]}\r\n                exact\r\n              >\r\n                {post.title}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default PostLinks;\r\n","import React, { useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport classes from \"./PostLinksDrawer.module.css\";\r\n\r\nconst PostLinksDrawer: React.FC<{ show: boolean; onHoverAway: () => void; onClick: () => void }> = (\r\n  props\r\n) => {\r\n  const nodeRef = useRef(null);\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-right\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n      nodeRef={nodeRef}\r\n    >\r\n      <aside\r\n        ref={nodeRef}\r\n        onMouseLeave={props.onHoverAway}\r\n        onClick={props.onClick}\r\n        className={classes[\"links-drawer\"]}\r\n      >\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  const linksHook = document.getElementById(\"bloglinks-hook\") as HTMLElement;\r\n  return ReactDOM.createPortal(content, linksHook);\r\n};\r\n\r\nexport default PostLinksDrawer;\r\n","import React from \"react\";\r\nimport DOMPurify from \"dompurify\";\r\n\r\nconst DisplayHTML: React.FC<{ text: string; className?: string }> = (props) => {\r\n  const createMarkup = () => {\r\n    return { __html: DOMPurify.sanitize(props.text) };\r\n  };\r\n  return (\r\n    <p className={props.className} dangerouslySetInnerHTML={createMarkup()} />\r\n  );\r\n};\r\n\r\nexport default DisplayHTML;\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Highlight from \"react-highlight\";\r\n\r\nimport classes from \"./Post.module.css\";\r\nimport CommentSection from \"./CommentSection\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport { PostContext } from \"../../shared/context/post-context\";\r\nimport PostLinks from \"./PostLinks\";\r\nimport PostLinksDrawer from \"./PostLinksDrawer\";\r\nimport Backdrop from \"../../shared/components/UIElements/Backdrop\";\r\nimport DisplayHTML from \"./DisplayHTML\";\r\n\r\nconst REST_API = process.env.REACT_APP_REST_API;\r\nconst ADMIN = process.env.REACT_APP_ADMIN_USER;\r\nconst SERVER = process.env.REACT_APP_SERVER;\r\n\r\ninterface Comment {\r\n  comment: string;\r\n  creatorId: string;\r\n  postId: string;\r\n  username: string;\r\n  __V: number;\r\n  _id: string;\r\n  date: string;\r\n}\r\n\r\ninterface PostInfo {\r\n  _id: string;\r\n  title: string;\r\n  blurb: string;\r\n  tags: string;\r\n  headImg: string;\r\n  headImgCaption: string;\r\n  headImgAlt: string;\r\n  month: string;\r\n  day: string;\r\n  year: string;\r\n  updatedMonth: String;\r\n  updatedDay: String;\r\n  updatedYear: String;\r\n  content: {\r\n    image?: {\r\n      key: string;\r\n      bucket: string;\r\n    };\r\n    type: string;\r\n    text: string;\r\n    alt?: string;\r\n    caption?: string;\r\n    language?: string;\r\n    _id: string;\r\n  }[];\r\n  references: {\r\n    authors: string;\r\n    date: string;\r\n    title: string;\r\n    url: string;\r\n    _id: string;\r\n  }[];\r\n  comments: Comment[];\r\n}\r\n\r\ninterface PostData {\r\n  title: string;\r\n  _id: string;\r\n}\r\n\r\nconst Post: React.FC = () => {\r\n  const postTitle = useParams<{ postId: string }>().postId;\r\n  const [loadedPost, setLoadedPost] = useState<PostInfo>();\r\n  const [loadedComments, setLoadedComments] = useState<Comment[]>([]);\r\n  const [loadedPostLinks, setLoadedPostLinks] = useState<PostData[]>([]);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [showLinks, setShowLinks] = useState(false);\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n  const postCtx = useContext(PostContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  postCtx.clearContext();\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${REST_API}/blog/posts/${postTitle.replaceAll(\"-\", \" \")}`\r\n        );\r\n        setLoadedPost(responseData.post);\r\n        document.title = responseData.post.title || \"Post Not Found\";\r\n        setLoadedPostLinks(responseData.posts);\r\n        setLoadedComments(responseData.post.comments);\r\n        const socket = io(`${SERVER}`);\r\n        socket.on(\"comments\", (data) => {\r\n          if (data.action === \"create\") {\r\n            addComment(data.comment);\r\n          } else if (data.action === \"delete\") {\r\n            deleteComment(data.commentId);\r\n          }\r\n        });\r\n      } catch (error) {}\r\n    };\r\n    getPost();\r\n  }, [sendRequest, postTitle]);\r\n\r\n  const addComment = (comment: Comment) => {\r\n    setLoadedComments((prevComments) => [...prevComments!, comment]);\r\n  };\r\n\r\n  const deleteComment = (commentId: string) => {\r\n    setLoadedComments((prevComments) =>\r\n      prevComments!.filter((comment) => comment._id !== commentId)\r\n    );\r\n  };\r\n\r\n  const addCommentHandler = useCallback(\r\n    async (commentData: { newComment: string }) => {\r\n      try {\r\n        await sendRequest(\r\n          `${REST_API}/blog/comment`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            newComment: commentData.newComment,\r\n            userId: authCtx.userId,\r\n            postId: loadedPost?._id,\r\n            date: new Date().toLocaleDateString(),\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + authCtx.token,\r\n          }\r\n        );\r\n      } catch (error) {}\r\n    },\r\n    [authCtx.token, authCtx.userId, loadedPost?._id, sendRequest]\r\n  );\r\n\r\n  const deleteCommentHandler = useCallback(\r\n    async (commentId: string) => {\r\n      try {\r\n        await sendRequest(\r\n          `${REST_API}/blog/comment/${commentId}`,\r\n          \"DELETE\",\r\n          {},\r\n          { Authorization: \"Bearer \" + authCtx.token }\r\n        );\r\n      } catch (error) {}\r\n    },\r\n    [authCtx.token, sendRequest]\r\n  );\r\n\r\n  const deletePostHandler = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `${REST_API}/blog/delete/${loadedPost?._id}`,\r\n        \"DELETE\",\r\n        {},\r\n        {\r\n          Authorization: \"Bearer \" + authCtx.token,\r\n        }\r\n      );\r\n      history.push(\"/blog\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const showDeleteWarning = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const editPostHandler = () => {\r\n    postCtx.setContext(\r\n      loadedPost!._id,\r\n      loadedPost!.title,\r\n      loadedPost!.blurb,\r\n      loadedPost!.tags,\r\n      loadedPost!.headImg,\r\n      loadedPost!.headImgCaption,\r\n      loadedPost!.headImgAlt,\r\n      loadedPost!.content,\r\n      loadedPost!.references\r\n    );\r\n    history.push(\"/blog/create\");\r\n  };\r\n\r\n  const showLinksHandler = () => {\r\n    setShowLinks(true);\r\n  };\r\n\r\n  const hideLinksHandler = () => {\r\n    setShowLinks(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Delete post?\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button type=\"button\" onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button type=\"button\" onClick={deletePostHandler} danger>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n        backdropClass={classes[\"modal-backdrop\"]}\r\n      >\r\n        Are you sure you want to delete this post?\r\n      </Modal>\r\n      {showLinks && <Backdrop onClick={hideLinksHandler} />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && !loadedPost && <LoadingSpinner asOverlay />}\r\n      {!isLoading && !loadedPost && (\r\n        <div className={classes[\"post-not-found-wrapper\"]}>\r\n          <Card className={classes[\"post-not-found\"]}>\r\n            <h2>Post Not Found!</h2>\r\n            <Button to=\"/blog\">Back</Button>\r\n          </Card>\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPost && (\r\n        <div className={classes[\"post-wrapper\"]}>\r\n          {!showLinks && (\r\n            <button\r\n              type=\"button\"\r\n              onMouseEnter={showLinksHandler}\r\n              onClick={showLinksHandler}\r\n              className={classes[\"open-links\"]}\r\n            >\r\n              <i className={classes[\"chevron\"]}></i>\r\n            </button>\r\n          )}\r\n          <PostLinksDrawer\r\n            onHoverAway={hideLinksHandler}\r\n            onClick={hideLinksHandler}\r\n            show={showLinks}\r\n          >\r\n            <PostLinks posts={loadedPostLinks} />\r\n          </PostLinksDrawer>\r\n          <div className={classes.post}>\r\n            <header>\r\n              <div className={classes[\"header-text\"]}>\r\n                <h1 id=\"title\">{loadedPost!.title}</h1>\r\n                <div className={classes.dates}>\r\n                  <time\r\n                    className={classes[\"created-date\"]}\r\n                    dateTime={new Date(\r\n                      `${loadedPost.month} ${loadedPost.day}, ${loadedPost.year}`\r\n                    ).toString()}\r\n                  >{`${loadedPost.month} ${loadedPost.day}, ${loadedPost.year}`}</time>\r\n                  {loadedPost.updatedMonth &&\r\n                    !(\r\n                      loadedPost.month === loadedPost.updatedMonth &&\r\n                      loadedPost.day === loadedPost.updatedDay &&\r\n                      loadedPost.year === loadedPost.updatedYear\r\n                    ) && (\r\n                      <p className={classes[\"updated-date\"]}>\r\n                        Updated{\" \"}\r\n                        <time\r\n                          dateTime={new Date(\r\n                            `${loadedPost.updatedMonth} ${loadedPost.updatedDay}, ${loadedPost.updatedYear}`\r\n                          ).toString()}\r\n                        >{`${loadedPost.updatedMonth} ${loadedPost.updatedDay}, ${loadedPost.updatedYear}`}</time>\r\n                      </p>\r\n                    )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={classes.tags}>\r\n                {loadedPost.tags.split(\", \").map((tag, index) => (\r\n                  <div key={`tag${index}`} className={classes.tag}>\r\n                    {tag.toLowerCase()}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <img\r\n                src={loadedPost.headImg}\r\n                alt={loadedPost.headImgAlt}\r\n                className={classes.headImg}\r\n              ></img>\r\n              <p className={classes.caption}>{loadedPost.headImgCaption}</p>\r\n            </header>\r\n            <article>\r\n              {loadedPost!.content.map((ct) => {\r\n                if (ct.type === \"paragraph\") {\r\n                  return (\r\n                    <DisplayHTML\r\n                      key={ct._id}\r\n                      className={classes[\"content-paragraph\"]}\r\n                      text={ct.text}\r\n                    />\r\n                  );\r\n                } else if (ct.type === \"image\" || ct.type === \"imageUrl\") {\r\n                  return (\r\n                    <React.Fragment>\r\n                      <img src={ct.text} alt={ct.alt} key={ct._id} />\r\n                      <p className={classes.caption}>{ct.caption}</p>\r\n                    </React.Fragment>\r\n                  );\r\n                } else if (ct.type === \"heading\") {\r\n                  return (\r\n                    <h2 className={classes[\"content-header\"]} key={ct._id}>\r\n                      {ct.text}\r\n                    </h2>\r\n                  );\r\n                } else if (ct.type === \"code\") {\r\n                  return (\r\n                    <pre key={Math.random()}>\r\n                      <code>\r\n                        <Highlight className={ct.language}>{ct.text}</Highlight>\r\n                      </code>\r\n                    </pre>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <div\r\n                      key={Math.random()}\r\n                    >{`Error: Content type ${ct.type} not supported.`}</div>\r\n                  );\r\n                }\r\n              })}\r\n              <section className={classes.references}>\r\n                <h2>Additional Resources</h2>\r\n                <ul>\r\n                  {loadedPost!.references.map((ref) => {\r\n                    return (\r\n                      <li key={ref.title}>\r\n                        <cite>\r\n                          {ref.authors}. ({ref.date}). <i>{ref.title}</i>. URL:{\" \"}\r\n                          <a\r\n                            href={ref.url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            {ref.url}\r\n                          </a>\r\n                        </cite>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </section>\r\n            </article>\r\n            {authCtx.userId === ADMIN && (\r\n              <div className={classes[\"admin-buttons\"]}>\r\n                <Button type=\"button\" onClick={editPostHandler}>\r\n                  Edit\r\n                </Button>\r\n                <Button type=\"button\" danger onClick={showDeleteWarning}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            )}\r\n            <section>\r\n              <CommentSection\r\n                postId={loadedPost._id}\r\n                comments={loadedComments!}\r\n                onDeleteComment={deleteCommentHandler}\r\n                onAddComment={addCommentHandler}\r\n              ></CommentSection>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype Props = {\r\n  id?: string;\r\n  href?: string;\r\n  size?: string;\r\n  inverse?: boolean;\r\n  danger?: boolean;\r\n  to?: string;\r\n  exact?: boolean;\r\n  type?: \"button\" | \"submit\" | \"reset\";\r\n  onClick?: any;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  arrayNumber?: number\r\n};\r\n\r\nconst Button: React.FC<Props> = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`\r\n          ${props.className}\r\n          ${classes.button}\r\n          ${classes[`button--${props.size || \"default\"}`]}\r\n          ${props.inverse && classes[\"button--inverse\"]}\r\n          ${props.danger && classes[\"button--danger\"]}\r\n        `}\r\n        href={props.href}\r\n        id={props.id}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        className={`\r\n          ${props.className}\r\n          ${classes.button}\r\n          ${classes[`button--${props.size || \"default\"}`]}\r\n          ${props.inverse && classes[\"button--inverse\"]}\r\n          ${props.danger && classes[\"button--danger\"]}\r\n        `}\r\n        id={props.id}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`\r\n        ${props.className}\r\n        ${classes.button}\r\n        ${classes[`button--${props.size || \"default\"}`]}\r\n        ${props.inverse && classes[\"button--inverse\"]}\r\n        ${props.danger && classes[\"button--danger\"]}\r\n      `}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FormEvent, ReactNode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  onCancel: () => void;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  headerClass?: string;\r\n  header?: string;\r\n  onSumbit?: () => {};\r\n  contentClass?: string;\r\n  footerClass?: string;\r\n  footer?: ReactNode;\r\n  nodeRef?: React.MutableRefObject<null>;\r\n  backdropClass?: string;\r\n};\r\n\r\nconst ModalOverlay: React.FC<Props> = (props) => {\r\n  const content = (\r\n    <div\r\n      ref={props.nodeRef}\r\n      className={`${classes[\"modal\"]} ${props.className}`}\r\n      style={props.style}\r\n    >\r\n      <header className={`${classes[\"modal__header\"]} ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSumbit\r\n            ? props.onSumbit\r\n            : (event: FormEvent) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`${classes[\"modal__content\"]} ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`${classes[\"modal__footer\"]} ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"modal-hook\") as HTMLElement\r\n  );\r\n};\r\n\r\nconst Modal: React.FC<Props> = (props) => {\r\n  const nodeRef = React.useRef(null);\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && (\r\n        <Backdrop\r\n          onClick={props.onCancel}\r\n          backdropClass={props.backdropClass}\r\n        />\r\n      )}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={300}\r\n        classNames=\"modal-transition\"\r\n        nodeRef={nodeRef}\r\n      >\r\n        <ModalOverlay {...props} nodeRef={nodeRef} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1rdVi\",\"button--inverse\":\"Button_button--inverse__-1_92\",\"button--danger\":\"Button_button--danger__Vl4FB\",\"button--small\":\"Button_button--small__27bKE\",\"button--big\":\"Button_button--big__2-DUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3BvLd\",\"modal__header\":\"Modal_modal__header__gy2sw\",\"modal__content\":\"Modal_modal__content__Q822G\",\"modal__footer\":\"Modal_modal__footer__2mvrH\"};","import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card: React.FC<{ className?: string; style?: React.CSSProperties }> = (\r\n  props\r\n) => {\r\n  return (\r\n    <div className={`${props.className} ${classes.card}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ATtpb\"};","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([] as AbortController[]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = undefined) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        //cancel any http requests if you navigate away from page\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error: any) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //abort any current requests before request is made\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\nimport classes from './ErrorModal.module.css';\r\n\r\nconst ErrorModal: React.FC<{ error: string | undefined; onClear: () => void }> =\r\n  (props) => {\r\n    return (\r\n      <Modal\r\n        onCancel={props.onClear}\r\n        header=\"An error occurred!\"\r\n        show={!!props.error}\r\n        footer={<Button inverse onClick={props.onClear}>Okay</Button>}\r\n        backdropClass={classes['error-backdrop']}\r\n        footerClass={classes['error-footer']}\r\n        style={{\"border\": \"1pt solid #f7e0ad\"}}\r\n      >\r\n        <p>{props.error}</p>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\nexport default ErrorModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-backdrop\":\"ErrorModal_error-backdrop__Co0CD\",\"error-footer\":\"ErrorModal_error-footer__2mG7c\"};"],"sourceRoot":""}