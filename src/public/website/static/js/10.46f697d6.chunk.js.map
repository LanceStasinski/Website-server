{"version":3,"sources":["pages/auth/Auth.tsx","shared/components/FormElements/Button.tsx","shared/components/UIElements/Modal.tsx","shared/components/FormElements/Button.module.css","shared/components/UIElements/Modal.module.css","shared/components/UIElements/Card.tsx","shared/components/UIElements/Card.module.css","shared/hooks/http-hook.tsx","shared/components/UIElements/ErrorModal.tsx","shared/components/UIElements/ErrorModal.module.css","pages/auth/Auth.module.css"],"names":["REST_API","process","Auth","document","title","authCtx","useContext","AuthContext","useState","isLoggingIn","setIsLoggingIn","useHttpClient","isLoading","error","sendRequest","clearError","loginHandler","userData","a","JSON","stringify","username","password","responseData","login","userId","token","confirmPassword","useForm","mode","register","errors","formState","handleSubmit","watch","useRef","current","Fragment","onClear","className","classes","auth","asOverlay","onSubmit","data","htmlFor","required","type","minLength","validate","value","message","inverse","onClick","prevState","Button","props","href","button","size","danger","id","children","to","disabled","ModalOverlay","content","ref","nodeRef","style","headerClass","header","onSumbit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","getElementById","Modal","React","show","onCancel","backdropClass","in","mountOnEnter","unmountOnExit","timeout","classNames","module","exports","Card","card","setIsLoading","setError","activeHttpRequests","useCallback","url","method","body","headers","undefined","httpAbortCtrl","AbortController","push","fetch","signal","response","json","filter","reqCtrl","ok","Error","useEffect","forEach","abortCtrl","abort","ErrorModal"],"mappings":"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","file":"static/js/10.46f697d6.chunk.js","sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\ninterface AuthInput {\r\n  username: string;\r\n  password: string;\r\n  confirmPassword?: string | undefined;\r\n}\r\n\r\nconst REST_API = process.env.REACT_APP_REST_API;\r\n\r\nconst Auth: React.FC = () => {\r\n  document.title = 'Login | Lance Stasinski'\r\n  const authCtx = useContext(AuthContext);\r\n  const [isLoggingIn, setIsLoggingIn] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const switchViewHandler = () => {\r\n    setIsLoggingIn((prevState) => !prevState);\r\n  };\r\n\r\n  const loginHandler = async (userData: {\r\n    username: string;\r\n    password: string;\r\n    confirmPassword?: string;\r\n  }) => {\r\n    if (isLoggingIn) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${REST_API}/auth/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            username: userData.username,\r\n            password: userData.password,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        authCtx.login(\r\n          responseData.userId,\r\n          responseData.token,\r\n          responseData.username\r\n        );\r\n      } catch (error) {} //error caught by useHttpClient hook\r\n    } else {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${REST_API}/auth/signup`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            username: userData.username,\r\n            password: userData.password,\r\n            confirmPassword: userData.confirmPassword,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        authCtx.login(\r\n          responseData.userId,\r\n          responseData.token,\r\n          responseData.username\r\n        );\r\n\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm({ mode: \"onChange\" });\r\n  const password = useRef<any>();\r\n  password.current = watch(\"password\", \"\");\r\n  const onSubmit: SubmitHandler<AuthInput> = (data) => loginHandler(data);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <div className={classes.auth}>\r\n        <Card className={classes[\"auth-card\"]}>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className={classes[\"auth-card-header\"]}>\r\n            <h2>{isLoggingIn ? \"LOGIN\" : \"SIGNUP\"}</h2>\r\n          </div>\r\n          <form\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            className={classes[\"auth-form\"]}\r\n          >\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              {...register(\"username\", { required: true })}\r\n              className={errors.username && classes[\"input-error\"]}\r\n            />\r\n            {errors.username && <p>Username required.</p>}\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              {...register(\"password\", { required: true, minLength: 6 })}\r\n              className={errors.username && classes[\"input-error\"]}\r\n            />\r\n            {errors.password && <p>Password must be at least 6 characters.</p>}\r\n            {!isLoggingIn && (\r\n              <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n            )}\r\n            {!isLoggingIn && (\r\n              <input\r\n                type=\"password\"\r\n                {...register(\"confirmPassword\", {\r\n                  validate: (value) =>\r\n                    value === password.current || \"Passwords must match.\",\r\n                })}\r\n              />\r\n            )}\r\n            {!isLoggingIn && errors.confirmPassword && (\r\n              <p>{errors.confirmPassword.message}</p>\r\n            )}\r\n            <Button type=\"submit\">\r\n              submit\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n        <Button\r\n          inverse\r\n          onClick={switchViewHandler}\r\n          className={classes[\"switch-btn\"]}\r\n        >\r\n          {isLoggingIn ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype Props = {\r\n  id?: string;\r\n  href?: string;\r\n  size?: string;\r\n  inverse?: boolean;\r\n  danger?: boolean;\r\n  to?: string;\r\n  exact?: boolean;\r\n  type?: \"button\" | \"submit\" | \"reset\";\r\n  onClick?: any;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  arrayNumber?: number\r\n};\r\n\r\nconst Button: React.FC<Props> = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`\r\n          ${props.className}\r\n          ${classes.button}\r\n          ${classes[`button--${props.size || \"default\"}`]}\r\n          ${props.inverse && classes[\"button--inverse\"]}\r\n          ${props.danger && classes[\"button--danger\"]}\r\n        `}\r\n        href={props.href}\r\n        id={props.id}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        className={`\r\n          ${props.className}\r\n          ${classes.button}\r\n          ${classes[`button--${props.size || \"default\"}`]}\r\n          ${props.inverse && classes[\"button--inverse\"]}\r\n          ${props.danger && classes[\"button--danger\"]}\r\n        `}\r\n        id={props.id}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`\r\n        ${props.className}\r\n        ${classes.button}\r\n        ${classes[`button--${props.size || \"default\"}`]}\r\n        ${props.inverse && classes[\"button--inverse\"]}\r\n        ${props.danger && classes[\"button--danger\"]}\r\n      `}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FormEvent, ReactNode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  onCancel: () => void;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  headerClass?: string;\r\n  header?: string;\r\n  onSumbit?: () => {};\r\n  contentClass?: string;\r\n  footerClass?: string;\r\n  footer?: ReactNode;\r\n  nodeRef?: React.MutableRefObject<null>;\r\n  backdropClass?: string;\r\n};\r\n\r\nconst ModalOverlay: React.FC<Props> = (props) => {\r\n  const content = (\r\n    <div\r\n      ref={props.nodeRef}\r\n      className={`${classes[\"modal\"]} ${props.className}`}\r\n      style={props.style}\r\n    >\r\n      <header className={`${classes[\"modal__header\"]} ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSumbit\r\n            ? props.onSumbit\r\n            : (event: FormEvent) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`${classes[\"modal__content\"]} ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`${classes[\"modal__footer\"]} ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"modal-hook\") as HTMLElement\r\n  );\r\n};\r\n\r\nconst Modal: React.FC<Props> = (props) => {\r\n  const nodeRef = React.useRef(null);\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && (\r\n        <Backdrop\r\n          onClick={props.onCancel}\r\n          backdropClass={props.backdropClass}\r\n        />\r\n      )}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={300}\r\n        classNames=\"modal-transition\"\r\n        nodeRef={nodeRef}\r\n      >\r\n        <ModalOverlay {...props} nodeRef={nodeRef} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1rdVi\",\"button--inverse\":\"Button_button--inverse__-1_92\",\"button--danger\":\"Button_button--danger__Vl4FB\",\"button--small\":\"Button_button--small__27bKE\",\"button--big\":\"Button_button--big__2-DUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3BvLd\",\"modal__header\":\"Modal_modal__header__gy2sw\",\"modal__content\":\"Modal_modal__content__Q822G\",\"modal__footer\":\"Modal_modal__footer__2mvrH\"};","import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card: React.FC<{ className?: string; style?: React.CSSProperties }> = (\r\n  props\r\n) => {\r\n  return (\r\n    <div className={`${props.className} ${classes.card}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ATtpb\"};","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([] as AbortController[]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = undefined) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        //cancel any http requests if you navigate away from page\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error: any) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //abort any current requests before request is made\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\nimport classes from './ErrorModal.module.css';\r\n\r\nconst ErrorModal: React.FC<{ error: string | undefined; onClear: () => void }> =\r\n  (props) => {\r\n    return (\r\n      <Modal\r\n        onCancel={props.onClear}\r\n        header=\"An error occurred!\"\r\n        show={!!props.error}\r\n        footer={<Button inverse onClick={props.onClear}>Okay</Button>}\r\n        backdropClass={classes['error-backdrop']}\r\n        footerClass={classes['error-footer']}\r\n        style={{\"border\": \"1pt solid #f7e0ad\"}}\r\n      >\r\n        <p>{props.error}</p>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\nexport default ErrorModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-backdrop\":\"ErrorModal_error-backdrop__Co0CD\",\"error-footer\":\"ErrorModal_error-footer__2mG7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__1ov2h\",\"auth-card\":\"Auth_auth-card__2GSud\",\"auth-card-header\":\"Auth_auth-card-header__2BxVg\",\"auth-form\":\"Auth_auth-form__3YY8_\",\"input-error\":\"Auth_input-error__j5pr_\",\"switch-btn\":\"Auth_switch-btn__x1OMn\"};"],"sourceRoot":""}