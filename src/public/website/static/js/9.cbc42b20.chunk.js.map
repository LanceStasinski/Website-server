{"version":3,"sources":["pages/auth/Auth.tsx","shared/components/FormElements/Button.tsx","shared/components/UIElements/Modal.tsx","shared/components/FormElements/Button.module.css","shared/hooks/http-hook.tsx","shared/components/UIElements/ErrorModal.tsx","shared/components/UIElements/Card.tsx","shared/components/UIElements/Modal.module.css","shared/components/UIElements/ErrorModal.module.css","shared/components/UIElements/Card.module.css","pages/auth/AuthCard.tsx","pages/auth/AuthCard.module.css","pages/auth/Auth.module.css"],"names":["Auth","document","title","className","classes","auth","Button","props","href","button","size","inverse","danger","id","target","rel","children","to","type","onClick","disabled","ModalOverlay","content","ref","nodeRef","style","headerClass","header","onSubmit","onSumbit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","getElementById","Modal","React","useRef","Fragment","show","onCancel","backdropClass","in","mountOnEnter","unmountOnExit","timeout","classNames","module","exports","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","sendRequest","useCallback","url","a","method","body","headers","undefined","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ErrorModal","onClear","border","zIndex","Card","card","REST_API","process","AuthCard","authCtx","useContext","AuthContext","isLoggingIn","setIsLoggingIn","loginHandler","userData","JSON","stringify","username","password","login","userId","token","confirmPassword","useForm","mode","register","errors","formState","handleSubmit","watch","asOverlay","data","htmlFor","required","minLength","validate","value","prevState"],"mappings":"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","file":"static/js/9.cbc42b20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport AuthCard from \"./AuthCard\";\r\n\r\nconst Auth: React.FC = () => {\r\n  document.title = \"Login | Lance Stasinski\";\r\n  return (\r\n    <div className={classes.auth}>\r\n      <AuthCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\ntype Props = {\r\n  id?: string;\r\n  href?: string;\r\n  size?: string;\r\n  inverse?: boolean;\r\n  danger?: boolean;\r\n  to?: string;\r\n  exact?: boolean;\r\n  type?: \"button\" | \"submit\" | \"reset\";\r\n  onClick?: any;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  arrayNumber?: number;\r\n};\r\n\r\nconst Button: React.FC<Props> = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`\r\n          ${props.className}\r\n          ${classes.button}\r\n          ${classes[`button--${props.size || \"default\"}`]}\r\n          ${props.inverse && classes[\"button--inverse\"]}\r\n          ${props.danger && classes[\"button--danger\"]}\r\n        `}\r\n        href={props.href}\r\n        id={props.id}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        className={`\r\n          ${props.className}\r\n          ${classes.button}\r\n          ${classes[`button--${props.size || \"default\"}`]}\r\n          ${props.inverse && classes[\"button--inverse\"]}\r\n          ${props.danger && classes[\"button--danger\"]}\r\n        `}\r\n        id={props.id}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`\r\n        ${props.className}\r\n        ${classes.button}\r\n        ${classes[`button--${props.size || \"default\"}`]}\r\n        ${props.inverse && classes[\"button--inverse\"]}\r\n        ${props.danger && classes[\"button--danger\"]}\r\n      `}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FormEvent, ReactNode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\ntype Props = {\r\n  show: boolean;\r\n  onCancel: () => void;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  headerClass?: string;\r\n  header?: string;\r\n  onSumbit?: () => {};\r\n  contentClass?: string;\r\n  footerClass?: string;\r\n  footer?: ReactNode;\r\n  nodeRef?: React.MutableRefObject<null>;\r\n  backdropClass?: string;\r\n};\r\n\r\nconst ModalOverlay: React.FC<Props> = (props) => {\r\n  const content = (\r\n    <div\r\n      ref={props.nodeRef}\r\n      className={`${classes[\"modal\"]} ${props.className}`}\r\n      style={props.style}\r\n    >\r\n      <header className={`${classes[\"modal__header\"]} ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSumbit\r\n            ? props.onSumbit\r\n            : (event: FormEvent) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`${classes[\"modal__content\"]} ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`${classes[\"modal__footer\"]} ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"modal-hook\") as HTMLElement\r\n  );\r\n};\r\n\r\nconst Modal: React.FC<Props> = (props) => {\r\n  const nodeRef = React.useRef(null);\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && (\r\n        <Backdrop\r\n          onClick={props.onCancel}\r\n          backdropClass={props.backdropClass}\r\n        />\r\n      )}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={300}\r\n        classNames=\"modal-transition\"\r\n        nodeRef={nodeRef}\r\n      >\r\n        <ModalOverlay {...props} nodeRef={nodeRef} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1rdVi\",\"button--inverse\":\"Button_button--inverse__-1_92\",\"button--danger\":\"Button_button--danger__Vl4FB\",\"button--small\":\"Button_button--small__27bKE\",\"button--big\":\"Button_button--big__2-DUE\"};","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([] as AbortController[]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = undefined) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        //cancel any http requests if you navigate away from page\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error: any) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //abort any current requests before request is made\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\nimport classes from './ErrorModal.module.css';\r\n\r\nconst ErrorModal: React.FC<{ error: string | undefined; onClear: () => void }> =\r\n  (props) => {\r\n    return (\r\n      <Modal\r\n        onCancel={props.onClear}\r\n        header=\"An error occurred!\"\r\n        show={!!props.error}\r\n        footer={<Button inverse onClick={props.onClear}>Okay</Button>}\r\n        backdropClass={classes['error-backdrop']}\r\n        footerClass={classes['error-footer']}\r\n        style={{border: \"1pt solid #f7e0ad\", zIndex: 500}}\r\n      >\r\n        <p>{props.error}</p>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\nexport default ErrorModal;","import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card: React.FC<{ className?: string; style?: React.CSSProperties }> = (\r\n  props\r\n) => {\r\n  return (\r\n    <div className={`${props.className} ${classes.card}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3BvLd\",\"modal__header\":\"Modal_modal__header__gy2sw\",\"modal__content\":\"Modal_modal__content__Q822G\",\"modal__footer\":\"Modal_modal__footer__2mvrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-backdrop\":\"ErrorModal_error-backdrop__Co0CD\",\"error-footer\":\"ErrorModal_error-footer__2mG7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ATtpb\"};","import React, { useState, useRef, useContext } from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nimport classes from \"./AuthCard.module.css\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\ninterface AuthInput {\r\n  username: string;\r\n  password: string;\r\n  confirmPassword?: string | undefined;\r\n}\r\n\r\nconst REST_API = process.env.REACT_APP_REST_API;\r\n\r\nconst AuthCard: React.FC<{ onCancel?: () => void }> = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [isLoggingIn, setIsLoggingIn] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const switchViewHandler = () => {\r\n    setIsLoggingIn((prevState) => !prevState);\r\n  };\r\n\r\n  const loginHandler = async (userData: {\r\n    username: string;\r\n    password: string;\r\n    confirmPassword?: string;\r\n  }) => {\r\n    if (isLoggingIn) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${REST_API}/auth/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            username: userData.username,\r\n            password: userData.password,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        authCtx.login(\r\n          responseData.userId,\r\n          responseData.token,\r\n          responseData.username\r\n        );\r\n        if (props.onCancel) {\r\n          props.onCancel();\r\n        }\r\n      } catch (error) {} //error caught by useHttpClient hook\r\n    } else {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${REST_API}/auth/signup`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            username: userData.username,\r\n            password: userData.password,\r\n            confirmPassword: userData.confirmPassword,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        authCtx.login(\r\n          responseData.userId,\r\n          responseData.token,\r\n          responseData.username\r\n        );\r\n        if (props.onCancel) {\r\n          props.onCancel();\r\n        }\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm({ mode: \"onChange\" });\r\n  const password = useRef<any>();\r\n  password.current = watch(\"password\", \"\");\r\n  const onSubmit: SubmitHandler<AuthInput> = (data) => loginHandler(data);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!error && (\r\n        <React.Fragment>\r\n          <Card className={classes[\"auth-card\"]}>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <div className={classes[\"auth-card-header\"]}>\r\n              <h2>{isLoggingIn ? \"LOGIN\" : \"SIGNUP\"}</h2>\r\n            </div>\r\n            <form\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              className={classes[\"auth-form\"]}\r\n            >\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                {...register(\"username\", { required: true })}\r\n                className={errors.username && classes[\"input-error\"]}\r\n              />\r\n              {errors.username && <p>Username required.</p>}\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                {...register(\"password\", { required: true, minLength: 6 })}\r\n                className={errors.username && classes[\"input-error\"]}\r\n              />\r\n              {errors.password && (\r\n                <p>Password must be at least 6 characters.</p>\r\n              )}\r\n              {!isLoggingIn && (\r\n                <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n              )}\r\n              {!isLoggingIn && (\r\n                <input\r\n                  type=\"password\"\r\n                  {...register(\"confirmPassword\", {\r\n                    validate: (value) =>\r\n                      value === password.current || \"Passwords must match.\",\r\n                  })}\r\n                />\r\n              )}\r\n              {!isLoggingIn && errors.confirmPassword && (\r\n                <p>{errors.confirmPassword.message}</p>\r\n              )}\r\n              <Button type=\"submit\">submit</Button>\r\n            </form>\r\n          </Card>\r\n          <Button\r\n            inverse\r\n            onClick={switchViewHandler}\r\n            className={classes[\"switch-btn\"]}\r\n          >\r\n            {isLoggingIn ? \"SIGNUP\" : \"LOGIN\"}\r\n          </Button>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthCard;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth-card\":\"AuthCard_auth-card__3XBFT\",\"auth-card-header\":\"AuthCard_auth-card-header__1IVrY\",\"auth-form\":\"AuthCard_auth-form__xwvFc\",\"input-error\":\"AuthCard_input-error__1qBs_\",\"switch-btn\":\"AuthCard_switch-btn__EoE4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__1ov2h\"};"],"sourceRoot":""}